worker_processes  1;
user root;
error_log logs/error.log;
events {
	worker_connections 1024;
}
http {
	default_type application/json;
	#default_type "text/html";
	access_log logs/access.log;
	#sendfile on;
	#tcp_nopush on;
	#tcp_nodelay on;
	#keepalive_timeout 60;
	#types_hash_max_size 2048;
	#server_tokens off;
	lua_code_cache on;
	upstream redis_pool {
		server 127.0.0.1:63799;
		keepalive 1024;
	}
	upstream dns_pool {
		server 127.0.0.1:80;
		keepalive 1024;
	}
	server {
		listen 8080;
		server_name 127.0.0.1;
		 
		location /redis_get {
			set_unescape_uri $key $arg_key;
			redis2_query get $key;
			redis2_pass redis_pool;
		}
		 
		location /dns_get {
			proxy_pass http://dns_pool/index.html;
		}
		 
		location /query {
			 content_by_lua_file conf/query.lua;
			# content_by_lua 'ngx.say("<p>hello, world</p>")';
		}
	}
}
